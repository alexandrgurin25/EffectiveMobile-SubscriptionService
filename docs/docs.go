// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/subscriptions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получение списка подписок с фильтрацией по ID пользователя, названием сервиса и пагинацией",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы (опционально)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Количество элементов на странице (опционально)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по ID пользователя (опционально)",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по названию сервиса (опционально)",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with subscriptions list",
                        "schema": {
                            "$ref": "#/definitions/subscription.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid format for UUID in ` + "`" + `user_id` + "`" + `",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Subscriptions not found",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создание новой подписки для пользователя",
                "parameters": [
                    {
                        "description": "Subscription data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription.SubRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successful",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Invalid format for UUID in ` + "`" + `user_id` + "`" + `",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/subscriptions/summary/{user_id}/{service_name}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Рассчитывает общую стоимость подписки для пользователя за определенный период",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID in UUID format",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "01-2025",
                        "description": "Start date in MM-YYYY format",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "12-2025",
                        "description": "End date in MM-YYYY format",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with total cost",
                        "schema": {
                            "$ref": "#/definitions/subscription.Summary"
                        }
                    },
                    "400": {
                        "description": "Invalid format for UUID in ` + "`" + `user_id` + "`" + `, empty service_name or missing start_date",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No subscriptions found for given criteria",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/subscriptions/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получение подписки по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID in UUID format",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid format for UUID in ` + "`" + `id` + "`" + `",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновление подписки по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID in UUID format",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription update data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription.SubRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated subscription details",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid format for UUID in ` + "`" + `id` + "`" + `, JSON, or validation error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удаление подписки по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID in UUID format",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Subscription deleted successfully"
                    },
                    "400": {
                        "description": "Invalid format for UUID in ` + "`" + `id` + "`" + `",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "subscription.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                }
            }
        },
        "subscription.ListResponse": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscription.SubResponse"
                    }
                }
            }
        },
        "subscription.SubRequest": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "subscription.SubResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "subscription.Summary": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "01-2025"
                },
                "total_cost": {
                    "type": "integer",
                    "example": 800
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Subscriptions Service API",
	Description:      "Сервис для управления подписками пользователей",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
